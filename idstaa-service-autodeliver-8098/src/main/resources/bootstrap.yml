server:
  port: 8098
spring:
    application:
        name: idstaa-service-autodeliver
    cloud:
      nacos:
        discovery:
          ################ 配置nacos server地址
          server-addr: nacos.idstaa.com:8848
          cluster-name: BJ
          #指定当前实例注册到的命名空间，不同的命名空间是隔离的，其中的服务不能互相掉用
          #namespace: d80e4457-1263-4482-8715-0bd7f19836e5
      sentinel:
        transport:
          dashboard: 127.0.0.1:8080 # sentinel dashboard/console地址
          port: 8719 # sentinel会在该端⼝启动http server，那么这样的话，控制台定义的⼀些限流等规则才能发送传递过来，
          #如果8719端⼝被占⽤，那么会依次+1
    #过滤掉eureka
    autoconfigure:
      exclude: org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration
# springboot中暴露健康检查等断点接⼝
management:
    endpoints:
        web:
            exposure:
                include: "*"
    # 暴露健康接⼝的细节
    endpoint:
        health:
            show-details: always
#针对的被调⽤⽅微服务名称,不加就是全局⽣效
idstaa-service-resume:
    ribbon:
        #请求连接超时时间
        ConnectTimeout: 2000
        #请求处理超时时间
        ReadTimeout: 10000 #Feign超时时长设置
        #对所有操作都进⾏重试
        OkToRetryOnAllOperations: true
        ####根据如上配置，当访问到故障请求的时候，它会再尝试访问⼀次当前实例（次数由MaxAutoRetries配置），
        ####如果不⾏，就换⼀个实例进⾏访问，如果还不⾏，再换⼀次实例访问（更换次数由MaxAutoRetriesNextServer配置），
        ####如果依然不⾏，返回失败信息。
        MaxAutoRetries: 0 #对当前选中实例重试次数，不包括第⼀次调⽤
        MaxAutoRetriesNextServer: 0 #切换实例的重试次数
        NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #负载策略调整
# 开启feign熔断功能
feign:
    hystrix:
        enabled: false
hystrix:
    command:
        default:
            execution:
                isolation:
                    thread:
                        #Hystrix的超时时⻓设置
                        timeoutInMilliseconds: 3000

