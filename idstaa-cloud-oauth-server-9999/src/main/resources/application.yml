server:
    port: 9999
Spring:
    application:
        name: idstaa-cloud-oauth-server
    zipkin:
        base-url: http://127.0.0.1:9411 # zipkin server的请求地址
        sender:
        # web 客户端将踪迹⽇志数据通过⽹络请求的⽅式传送到服务端，另外还有配置
         # kafka/rabbit 客户端将踪迹⽇志数据传递到mq进⾏中转
            type: web
        sleuth:
            sampler:
        # 采样率 1 代表100%全部采集 ，默认0.1 代表10% 的请求踪迹数据会被采 集
        # ⽣产环境下，请求量⾮常⼤，没有必要所有请求的踪迹数据都采集分析，对于⽹络包括server端压⼒都是⽐较⼤的，可以配置采样率采集⼀定⽐例的请求的踪迹数据进⾏分析即可
                probability: 1
    datasource:
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/oauth?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&serverTimezone=UTC
        username: root
        password: root
    druid:
        initialSize: 10
        minIdle: 10
        maxActive: 30
        maxWait: 50000
eureka:
    client:
        serviceUrl: # eureka server的路径
            defaultZone: http://idstaacloudeurekaservera:8761/eureka/,http://idstaacloudeurekaserverb:8762/eureka/ #把 eureka 集群中的所有 url 都填写了进来，也可以只写⼀台，因为各个 eureka server 可以同步注册表
    instance:
        #使⽤ip注册，否则会使⽤主机名注册了（此处考虑到对⽼版本的兼容，新版本经过实验都是ip）
        prefer-ip-address: true
        #⾃定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress
        instance-id: ${spring.cloud.client.ipaddress}:${spring.application.name}:${server.port}:@project.version@