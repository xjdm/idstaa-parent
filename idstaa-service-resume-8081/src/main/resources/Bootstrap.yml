server:
  port: 8081
spring:
  application:
    name: idstaa-service-resume
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/lagou?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
    username: root
    password: root
  jpa:
    database: MySQL
    show-sql: true
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl  #避免将驼峰命名转换为下划线命名
  cloud:
     #config客户端配置,和ConfigServer通信，并告知ConfigServer希望获取的配置信息在哪个文件中
    config:
      name: idstaa-service-resume  #配置文件名称
      profile: dev  #后缀名称
      label: master #分支名称
      uri: http://localhost:9006    #ConfigServer配置中心地址
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  zipkin:
    base-url: http://127.0.0.1:9411 # zipkin server的请求地址
    sender:
    # web 客户端将踪迹⽇志数据通过⽹络请求的⽅式传送到服务端，另外还有配置
     # kafka/rabbit 客户端将踪迹⽇志数据传递到mq进⾏中转
      type: web
    sleuth:
        sampler:
        # 采样率 1 代表100%全部采集 ，默认0.1 代表10% 的请求踪迹数据会被采 集
        # ⽣产环境下，请求量⾮常⼤，没有必要所有请求的踪迹数据都采集分析，对于⽹络包括server端压⼒都是⽐较⼤的，可以配置采样率采集⼀定⽐例的请求的踪迹数据进⾏分析即可
            probability: 1
#注册到Eureka注册中心
eureka:
    client:
        serviceUrl: # eureka server的路径
               ##把 eureka 集群中的所有 url 都填写了进来，也可以只写⼀台，因为各个 eureka server 可以同步注册表
            defaultZone: http://idstaacloudeurekaservera:8761/eureka/,http://idstaacloudeurekaserverb:8762/eureka/
    instance:
    #使⽤ip注册，否则会使⽤主机名注册了（此处考虑到对⽼版本的兼容，新版本经过实验都是ip）
       prefer-ip-address: true
        #⾃定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress
       instance-id: ${spring.cloud.client.ipaddress}:${spring.application.name}:${server.port}:@project.version@
       metadata-map:
            # ⾃定义元数据(kv⾃定义)
            cluster: cl1
            region: rn1
management:
    endpoints:
        web:
            exposure:
                include: "*"
#分布式链路追踪
logging:
    level:
        org.springframework.web.servlet.DispatcherServlet: debug
        org.springframework.cloud.sleuth: debug