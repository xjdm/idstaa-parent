server:
  port: 8096
#注册到Eureka注册中心
eureka:
    client:
        serviceUrl: # eureka server的路径
               ##把 eureka 集群中的所有 url 都填写了进来，也可以只写⼀台，因为各个 eureka server 可以同步注册表
            defaultZone: http://idstaacloudeurekaservera:8761/eureka/,http://idstaacloudeurekaserverb:8762/eureka/
    instance:
    #使⽤ip注册，否则会使⽤主机名注册了（此处考虑到对⽼版本的兼容，新版本经过实验都是ip）
       prefer-ip-address: true
        #⾃定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress
       instance-id: ${spring.cloud.client.ipaddress}:${spring.application.name}:${server.port}:@project.version@
spring:
    application:
        name: idstaa-service-autodeliver
    zipkin:
        base-url: http://127.0.0.1:9411 # zipkin server的请求地址
        sender:
        # web 客户端将踪迹⽇志数据通过⽹络请求的⽅式传送到服务端，另外还有配置
         # kafka/rabbit 客户端将踪迹⽇志数据传递到mq进⾏中转
            type: web
    sleuth:
        sampler:
        # 采样率 1 代表100%全部采集 ，默认0.1 代表10% 的请求踪迹数据会被采 集
        # ⽣产环境下，请求量⾮常⼤，没有必要所有请求的踪迹数据都采集分析，对于⽹络包括server端压⼒都是⽐较⼤的，可以配置采样率采集⼀定⽐例的请求的踪迹数据进⾏分析即可
            probability: 1
# springboot中暴露健康检查等断点接⼝
management:
    endpoints:
        web:
            exposure:
                include: "*"
    # 暴露健康接⼝的细节
    endpoint:
        health:
            show-details: always
#针对的被调⽤⽅微服务名称,不加就是全局⽣效
idstaa-service-resume:
    ribbon:
        #请求连接超时时间
        ConnectTimeout: 2000
        #请求处理超时时间
        ReadTimeout: 10000 #Feign超时时长设置
        #对所有操作都进⾏重试
        OkToRetryOnAllOperations: true
        ####根据如上配置，当访问到故障请求的时候，它会再尝试访问⼀次当前实例（次数由MaxAutoRetries配置），
        ####如果不⾏，就换⼀个实例进⾏访问，如果还不⾏，再换⼀次实例访问（更换次数由MaxAutoRetriesNextServer配置），
        ####如果依然不⾏，返回失败信息。
        MaxAutoRetries: 0 #对当前选中实例重试次数，不包括第⼀次调⽤
        MaxAutoRetriesNextServer: 0 #切换实例的重试次数
        NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #负载策略调整
logging:
    level:
        # Feign⽇志只会对⽇志级别为debug的做出响应
        com.idstaa.controller.service.ResumeServiceFeignClient: debug
        #分布式链路追踪
        org.springframework.web.servlet.DispatcherServlet: debug
        org.springframework.cloud.sleuth: debug
# 开启feign熔断功能
feign:
    hystrix:
        enabled: false
hystrix:
    command:
        default:
            execution:
                isolation:
                    thread:
                        #Hystrix的超时时⻓设置
                        timeoutInMilliseconds: 3000

