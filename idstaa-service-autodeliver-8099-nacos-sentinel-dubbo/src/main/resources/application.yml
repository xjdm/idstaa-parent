server:
  port: 8099
spring:
    application:
        name: idstaa-service-autodeliver
    main:
        allow-bean-definition-overriding: true
    cloud:
      nacos:
        discovery:
          ################ 配置nacos server地址
          server-addr: nacos.idstaa.com:8848
          cluster-name: BJ
          #指定当前实例注册到的命名空间，不同的命名空间是隔离的，其中的服务不能互相掉用
          #namespace: d80e4457-1263-4482-8715-0bd7f19836e5
      sentinel:
        transport:
          dashboard: sentinel.idstaa.com:8080 # sentinel dashboard/console地址
          port: 8719 # sentinel会在该端⼝启动http server，那么这样的话，控制台定义的⼀些限流等规则才能发送传递过来，
          #如果8719端⼝被占⽤，那么会依次+1
        datasource:
          # 自定义的流控规则数据源名称
          flow:
            nacos:
              server-addr: ${spring.cloud.nacos.discovery.server-addr}
              data-id: ${spring.application.name}-flow-rules
              #groupId: DEFAULT_GROUP
              data-type: json
              rule-type: flow  # 类型来自RuleType类
          # 自定义的降级规则数据源名称
          degrade:
            nacos:
              server-addr: ${spring.cloud.nacos.discovery.server-addr}
              data-id: ${spring.application.name}-degrade-rules
              #groupId: DEFAULT_GROUP
              data-type: json
              rule-type: degrade  # 类型来自RuleType类
    #过滤掉eureka
    autoconfigure:
      exclude: org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration
# springboot中暴露健康检查等断点接⼝
management:
    endpoints:
        web:
            exposure:
                include: "*"
    # 暴露健康接⼝的细节
    endpoint:
        health:
            show-details: always

